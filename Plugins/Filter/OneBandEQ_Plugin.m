function this = OneBandEQ_Plugin(strName)global AlgoCom; this = struct; vars = struct;%% add plugin-properties here% setVar('text', 'this is a string', 'string');setVar('Bypass', 0, 'bool');% setVar('a', .1, 'numeric');% setVar('b', 5, 'integer');% setVar('d', [1 2 3; 4 5 6], 'matrix');% setVar('e', 'a', {'a' 'b' 'c'});%setVar('Gain', 0.25 , 'numeric', -24, 24);setVar('szGain', 0, 'integer', -24, 24);setVar('Frequency',0 ,'integer',20,20000);setVar('Q',0.25 ,'numeric');% setVar('d', [1 2 3; 4 5 6], 'matrix', -inf, inf);% setVar('e', 'a', {'a' 'b' 'c'});%% add local plugin-variables here% data = [];bBypass = 0;b_Coeffs = [];a_Coeffs = [];%States = zeros(length(b_Coeffs)-1,1);States = [];Gain = 24;Freq_Hz = 800;fs = 0;QFactor = 4;iNrOfChns = [];InStates1 = [];InStates2 = [];OutStates1 = [];OutStates2 = [];%% public and nessesarry functions    function [BlockSettings] = init(BlockSettings)        BlockSettingsIn = BlockSettings;        BlockSettingsOut = BlockSettings;        fs = BlockSettings.fs;        [b_Coeffs, a_Coeffs]=filterdesigner(fs,Freq_Hz,QFactor,'pEQ',Gain);        States = zeros(length(b_Coeffs)-1,1);        iNrOfChns = BlockSettings.channels;        InStates1 = zeros(iNrOfChns,1);        InStates2 = zeros(iNrOfChns,1);        OutStates1 = zeros(iNrOfChns,1);        OutStates2 = zeros(iNrOfChns,1);            end    function preprocess()    end    function [out] = process(in)        if bBypass == 0            % Matlab            % [out, States] = filter(b_Coeffs,a_Coeffs,in,States);            % C-Style            out = zeros(size(in));            for cc = 1:iNrOfChns                for kk = 1:size(in,1);                    indata = in(kk,cc);                                        outdata = indata*b_Coeffs(1) + InStates1(cc)*b_Coeffs(2) + InStates2(cc)*b_Coeffs(3) ...                        - OutStates1(cc)*a_Coeffs(2) - OutStates2(cc)*a_Coeffs(3);                                        InStates2(cc) = InStates1(cc);                    InStates1(cc) = indata;                                        OutStates2(cc) = OutStates1(cc);                    OutStates1(cc) = outdata;                                                            out(kk,cc) = outdata;                end            end                    else            out = in;        end    end    function postprocess()    end    function VarUpdated(Varname)        if strcmp(Varname, 'Bypass')            bBypass = getVar('Bypass');        elseif strcmp(Varname, 'szGain')            Gain = getVar('szGain');            [b_Coeffs, a_Coeffs]=filterdesigner(fs,Freq_Hz,QFactor,'pEQ',Gain);            figure(10);            [H,w] = freqz(b_Coeffs,a_Coeffs,2048,fs);            plot(w,20*log10(abs(H)));        elseif strcmp(Varname, 'Frequency')            Freq_Hz = getVar('Frequency');            [b_Coeffs, a_Coeffs]=filterdesigner(fs,Freq_Hz,QFactor,'pEQ',Gain);            figure(10);            [H,w] = freqz(b_Coeffs,a_Coeffs,2048,fs);            plot(w,20*log10(abs(H)));        elseif strcmp(Varname, 'Q')            QFactor = getVar('Q');            [b_Coeffs, a_Coeffs]=filterdesigner(fs,Freq_Hz,QFactor,'pEQ',Gain);            figure(10);            [H,w] = freqz(b_Coeffs,a_Coeffs,2048,fs);            plot(w,20*log10(abs(H)));        end    endend